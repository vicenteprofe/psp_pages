"use strict";(self.webpackChunkapuntes_psp=self.webpackChunkapuntes_psp||[]).push([[13],{9163:(s,a,e)=>{e.r(a),e.d(a,{data:()=>n});const n={key:"v-5320ff04",path:"/es/unit2/processbuilder.html",title:"2.1 Creación de procesos con Java",lang:"es-ES",frontmatter:{title:"2.1 Creación de procesos con Java"},excerpt:"",headers:[{level:2,title:"1.1.1. Creación rápida de procesos con Runtime",slug:"_1-1-1-creacion-rapida-de-procesos-con-runtime",children:[]}],filePathRelative:"es/unit2/processbuilder.md",git:{updatedTime:1631440036e3,contributors:[{name:"Vicente Martínez",email:"vicente@iesdoctorbalmis.com",commits:1}]}}},9308:(s,a,e)=>{e.r(a),e.d(a,{default:()=>g});var n=e(6252);const o=(0,n._)("h1",{id:"_1-1-procesos-programas-hilos",tabindex:"-1"},"1.1. Procesos, Programas, hilos",-1),l={class:"table-of-contents"},p=(0,n.Uk)("1.1.1. Creación rápida de procesos con Runtime"),t=(0,n._)("h2",{id:"_1-1-1-creacion-rapida-de-procesos-con-runtime",tabindex:"-1"},"1.1.1. Creación rápida de procesos con Runtime",-1),r=(0,n._)("p",null,"La clase java.lang.Runtime se usa principalmente para interactuar con el JRE de Java. Esta clase proporciona métodos para lanzar procesos, llamar al recolector de basura (Garbage Collector), saber la cantidad de memoria disponible y libre, etc.",-1),c={href:"https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Runtime.html",target:"_blank",rel:"noopener noreferrer"},i=(0,n.Uk)("Especificación java.lang.Runtime "),u=(0,n._)("p",null,[(0,n.Uk)("Cada aplicación en Java tiene acceso a una única instancia de "),(0,n._)("em",null,"java.lang.Runtime"),(0,n.Uk)(" a través del método "),(0,n._)("code",null,"Runtime.getRuntime()"),(0,n.Uk)(" que devuelve la instancia "),(0,n._)("strong",null,"singleton"),(0,n.Uk)(" de la clase Runtime.")],-1),d={class:"custom-container question"},m=(0,n._)("p",{class:"custom-container-title"},"Patrones de diseño: Singleton",-1),y=(0,n._)("p",null,"¿Qué son los patrones de diseño? ¿Qué es y para qué se usa el patrón de diseño singleton?",-1),A=(0,n._)("p",null,"Investiga cómo realizar una clase que siga el patrón de diseño singleton.",-1),b={href:"https://refactoring.guru/es/design-patterns/java",target:"_blank",rel:"noopener noreferrer"},B=(0,n.Uk)("Refactoring.Guru Patrones de diseño"),D=(0,n.uE)('<p>El método que nos interesa a nosotros es</p><blockquote><p>public Process exec(String command) throws IOException</p></blockquote><p>Veamos un ejemplo sencillo de uso de este método</p><div class="language-java ext-java line-numbers-mode"><pre class="shiki" style="background-color:#FAFAFA;"><code><span class="line"><span style="color:#9C3EDA;">public</span><span style="color:#90A4AE;"> </span><span style="color:#9C3EDA;">static</span><span style="color:#90A4AE;"> </span><span style="color:#9C3EDA;">void</span><span style="color:#90A4AE;"> </span><span style="color:#6182B8;">main</span><span style="color:#39ADB5;">(</span><span style="color:#9C3EDA;">String</span><span style="color:#39ADB5;">[]</span><span style="color:#90A4AE;"> args</span><span style="color:#39ADB5;">)</span><span style="color:#90A4AE;"> throws IOException </span><span style="color:#39ADB5;">{</span></span>\n<span class="line"><span style="color:#39ADB5;">    </span><span style="color:#90A4AE;font-style:italic;">// Lanzar la app notepad</span></span>\n<span class="line"><span style="color:#90A4AE;">    Runtime</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">getRuntime</span><span style="color:#39ADB5;">().</span><span style="color:#6182B8;">exec</span><span style="color:#39ADB5;">(</span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">notepad.exe</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#39ADB5;">    </span><span style="color:#90A4AE;font-style:italic;">// Esto siempre funciona</span></span>\n<span class="line"><span style="color:#39ADB5;">    </span><span style="color:#90A4AE;font-style:italic;">// String separator = System.getProperty(&quot;file.separator&quot;);</span></span>\n<span class="line"><span style="color:#39ADB5;">    </span><span style="color:#90A4AE;font-style:italic;">// Runtime.getRuntime().exec(&quot;c:&quot;+separator+&quot;windows&quot;+separator+&quot;notepad.exe&quot;);</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#39ADB5;">    </span><span style="color:#90A4AE;font-style:italic;">// Esto suele funcionar</span></span>\n<span class="line"><span style="color:#39ADB5;">    </span><span style="color:#90A4AE;font-style:italic;">// Runtime.getRuntime().exec(&quot;c:/windows/notepad.exe&quot;);</span></span>\n<span class="line"><span style="color:#39ADB5;">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>Se puede observar que en el parámetro que pasamos al método <code>exec</code> indicamos el programa que queremos ejecutar. En este caso, como el <em>notepad</em> se encuentra en el PATH del sistema, no es necesario indicar la ruta donde se encuentra el programa. En otro caso, sí tendríamos que hacerlo.</p><div class="custom-container danger"><p class="custom-container-title">File separator</p><p>Para indicar las rutas en un sistema los sistemas UNIX emplean el caracter <strong>/</strong> como separador mientras que los sistemas Windows usan el caracter <strong>\\</strong> . En resumen, / en *X y \\ en Windows.</p><p>¿Cómo podemos hacer entonces que nuestras aplicaciones sean independientes del SO en el que se ejecutan?</p><p>Para este tipo de cuestiones vamos a utilizar de forma recurrente las propiedades del sistema mediante <code>System.getProperty(String propName)</code>. Estas propiedades se configuran con el propio sistema operativo, aunque las podemos modificar usando los parámetros de ejecución de la máquina virtual</p><blockquote><p>String separator = System.getProperty(&quot;file.separator&quot;);</p></blockquote><blockquote><p>-Dfile.separator</p></blockquote><p>Aunque siempre es una buena práctica usar el caracter <strong>/</strong> en las rutas ya que Java es capaz de convertirlas al sistema en el que se ejecuta.</p></div><p>Si lo que queremos es ejecutar un comando del SO, tenemos que hacerlo, al igual que si lo hacemos manualmente, a través del shell del sistema, donde volvemos a encontrar la dicotomía entre sistemas UNIX y sistemas Windows.</p><p>Vamos a ver el código que, a través de las propiedades del sistema, nos permite obtener un listado de los archivos existentes en la carpeta personal del usuario.</p><div class="language-java ext-java line-numbers-mode"><pre class="shiki" style="background-color:#FAFAFA;"><code><span class="line"><span style="color:#90A4AE;font-style:italic;">// Primero obtenemos la carpeta del usuario</span></span>\n<span class="line"><span style="color:#9C3EDA;">String</span><span style="color:#90A4AE;"> homeDirectory </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> System</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">getProperty</span><span style="color:#39ADB5;">(</span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">user.home</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">);</span></span>\n<span class="line"><span style="color:#9C3EDA;">boolean</span><span style="color:#90A4AE;"> isWindows </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> System</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">getProperty</span><span style="color:#39ADB5;">(</span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">os.name</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">)</span></span>\n<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">toLowerCase</span><span style="color:#39ADB5;">().</span><span style="color:#6182B8;">startsWith</span><span style="color:#39ADB5;">(</span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">windows</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#39ADB5;font-style:italic;">if</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">isWindows</span><span style="color:#39ADB5;">)</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">{</span></span>\n<span class="line"><span style="color:#90A4AE;">    Runtime</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">getRuntime</span><span style="color:#39ADB5;">()</span></span>\n<span class="line"><span style="color:#90A4AE;">      </span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">exec</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">String</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">format</span><span style="color:#39ADB5;">(</span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">cmd.exe /c dir %s</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> homeDirectory</span><span style="color:#39ADB5;">));</span></span>\n<span class="line"><span style="color:#39ADB5;">}</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;font-style:italic;">else</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">{</span></span>\n<span class="line"><span style="color:#90A4AE;">    Runtime</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">getRuntime</span><span style="color:#39ADB5;">()</span></span>\n<span class="line"><span style="color:#90A4AE;">      </span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">exec</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">String</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">format</span><span style="color:#39ADB5;">(</span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">sh -c ls %s</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> homeDirectory</span><span style="color:#39ADB5;">));</span></span>\n<span class="line"><span style="color:#39ADB5;">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><div class="custom-container info"><p class="custom-container-title">Modo shell no interactivo</p><p>Como se puede observar, tanto para Windows como UNIX se ha usado el modificador <strong>c</strong> del comando. Este modificador indica que se abra un shell, se ejecute el comando recibido y se cierre el proceso del shell.</p></div>',10),g={render:function(s,a){const e=(0,n.up)("DownloadPDF-component"),g=(0,n.up)("DocumentCover-component"),v=(0,n.up)("RouterLink"),q=(0,n.up)("OutboundLink");return(0,n.wg)(),(0,n.iD)(n.HY,null,[(0,n.Wm)(e),(0,n.Wm)(g,{titulo:"2.1. Creación de procesos con Java"}),o,(0,n._)("nav",l,[(0,n._)("ul",null,[(0,n._)("li",null,[(0,n.Wm)(v,{to:"#_1-1-1-creacion-rapida-de-procesos-con-runtime"},{default:(0,n.w5)((()=>[p])),_:1})])])]),t,r,(0,n._)("blockquote",null,[(0,n._)("p",null,[(0,n._)("a",c,[i,(0,n.Wm)(q)])])]),u,(0,n._)("div",d,[m,y,A,(0,n._)("p",null,[(0,n._)("a",b,[B,(0,n.Wm)(q)])])]),D],64)}}}}]);